generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  given_name    String?
  family_name   String?
  nickname      String?
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  wonMatches    Match[]   @relation("WonMatches")
  lostMatches   Match[]   @relation("LostMatches")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Match {
  id          String   @id @default(cuid())
  date        DateTime @default(now())
  winnerScore Int
  loserScore  Int
  winner      User     @relation(name: "WonMatches", fields: [winnerId], references: [id])
  winnerId    String
  loser       User     @relation(name: "LostMatches", fields: [loserId], references: [id])
  loserId     String

  @@unique([winnerId, loserId, date])
}
